{"version":3,"sources":["OptimBrowser/OptimBrowser.jsx","App/App.jsx","index.js"],"names":["OptimBrowser","margin","useState","canvas","setCanvas","optimData","setOptimData","selectedMix","setSelectedMix","xAxisObjective","setXAxisObjective","yAxisObjective","setYAxisObjective","min","max","costRange","setCostRange","bloomRange","setBloomRange","shannonRange","setShannonRange","consRange","setConsRange","phyloDistRange","setPhyloDistRange","costFilter","setCostFilter","bloomFilter","setBloomFilter","shannonFilter","setShannonFilter","consFilter","setConsFilter","phyloDistFilter","setPhyloDistFilter","useEffect","c","d3","append","attr","xmax","d","cost","xScale","domain","range","xAxis","scale","ticks","call","figW","style","text","axisLabels","ymax","bloom","yScale","yAxis","figH","a","dataURL","process","console","log","indiv","phylo_dist","shannon","consval","grass_spec_frac","grass_weight_frac","data","Math","floor","ceil","fetchData","selectedPointID","xmin","select","ymin","pointColor","pt","pointOpacity","t","duration","selectAll","join","enter","on","i","this","g","update","transition","exit","remove","updatePlot","id","name","setXAxis","setYAxis","mixid","AxisControl","value","updater","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","table","boldCell","fontWeight","AxisSelect","label","classes","FormControl","className","InputLabel","Select","labelId","onChange","e","target","MenuItem","Slider","filterMin","setFilterMin","filterMax","setFilterMax","type","currentTarget","ReportPane","scores","species","weight","composition","setComposition","compSort","b","specindices","specnames","weights","sort","MixCompositionTable","Table","size","aria-label","TableHead","TableRow","TableCell","padding","align","TableBody","map","row","key","component","scope","replace","round","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe24d538.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport * as d3 from 'd3';\nimport './OptimBrowser.css';\n\n\nconst OptimBrowser = () => {\n\n  const figH = 600;\n  const figW = 780;\n  const margin = ({top:50, right:50, bottom: 50, left: 50});\n\n  const [canvas, setCanvas] = useState(null);\n  const [optimData, setOptimData] = useState(null);\n  const [selectedMix, setSelectedMix] = useState(null);\n  const [xAxisObjective, setXAxisObjective] = useState(\"cost\");\n  const [yAxisObjective, setYAxisObjective] = useState(\"bloom\");\n  const [costRange, setCostRange] = useState({min: 0, max: 100});\n  const [bloomRange, setBloomRange] = useState({min: 0, max: 100});\n  const [shannonRange, setShannonRange] = useState({min: 0, max: 100});\n  const [consRange, setConsRange] = useState({min: 0, max: 100});\n  const [phyloDistRange, setPhyloDistRange] = useState({min: 0, max: 100});\n  const [costFilter, setCostFilter] = useState({min: 0, max: 100});\n  const [bloomFilter, setBloomFilter] = useState({min: 0, max: 100});\n  const [shannonFilter, setShannonFilter] = useState({min: 0, max: 100});\n  const [consFilter, setConsFilter] = useState({min: 0, max: 100});\n  const [phyloDistFilter, setPhyloDistFilter] = useState({min: 0, max: 100});\n\n  /** Init the svg div */\n  useEffect(() => {\n    const c = d3.select(\"#plot-pane\")\n      .append(\"svg\")\n        .attr(\"width\", figW)\n        .attr(\"height\", figH);\n    setCanvas(c);\n  }, [])\n\n  /** Static graph component setup */\n  useEffect(() => {\n    if (canvas === null || optimData === null) {\n      return;\n    }\n    const xmin = 0;\n    const xmax = d3.max(optimData, d=>+d.cost);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(4);\n    canvas.append(\"g\")\n      .attr(\"id\", \"x-axis\")\n      .attr(\"transform\", `translate(0, ${figH - margin.bottom})`)\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"x-axis-label\")\n      .attr(\"transform\", `translate(${figW/2}, ${figH - margin.bottom + 40})`)\n      .style(\"text-anchor\", \"middle\")\n      .text(axisLabels[xAxisObjective]);\n\n    const ymin = 15;\n    const ymax = d3.max(optimData, d=>+d.bloom);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.append(\"g\")\n      .attr(\"id\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"y-axis-label\")\n      .attr(\"transform\", `translate(18, ${figH/2}) rotate(-90)`)\n      .style(\"text-anchor\", \"middle\")\n      .text(axisLabels[yAxisObjective]);\n  }, [canvas, optimData])\n  // }, [canvas, optimData, xAxisObjective, yAxisObjective])\n\n  /** Load static data */\n  useEffect(() => {\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + \"/static/data/scores.csv\";\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, function(d) {\n        return {\n          indiv: +d.indiv,\n          cost: +d.cost,\n          phylo_dist: +d.phylo_dist,\n          bloom: +d.bloom,\n          shannon: +d.shannon,\n          consval: +d.consval,\n          grass_spec_frac: +d.grass_spec_frac,\n          grass_weight_frac: +d.grass_weight_frac\n        }\n      });\n      setCostRange({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomRange({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonRange({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsRange({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistRange({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setCostFilter({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomFilter({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonFilter({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsFilter({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistFilter({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setOptimData(data);\n      // setOptimData(data.slice(1,10));\n\n    };\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    if (canvas === null || optimData === null){ return }\n    updatePlot();\n  }, [canvas, optimData, costFilter, bloomFilter, shannonFilter, consFilter, phyloDistFilter, xAxisObjective, yAxisObjective])\n\n  function updatePlot() {\n    var selectedPointID = selectedMix; // This is awkward - need to track \n\n    /** Axes */\n    const xmin = Math.floor(0.98 * d3.min(optimData, d=>+d[xAxisObjective]));\n    const xmax = d3.max(optimData, d=>+d[xAxisObjective]);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(5);\n    canvas.select(\"g#x-axis\")\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#x-axis-label\")\n      .text(axisLabels[xAxisObjective]);\n\n    const ymin = Math.floor(0.98 * d3.min(optimData, d=>+d[yAxisObjective]));\n    const ymax = d3.max(optimData, d=>+d[yAxisObjective]);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.select(\"g#y-axis\")\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#y-axis-label\")\n      .text(axisLabels[yAxisObjective]);\n    \n    function pointColor(pt) {\n      if (pt.indiv === selectedPointID) { return \"red\" }\n      else if (\n        pt.bloom >= bloomFilter.min && pt.bloom <= bloomFilter.max &&\n        pt.cost >= costFilter.min && pt.cost <= costFilter.max &&\n        pt.shannon >= shannonFilter.min && pt.shannon <= shannonFilter.max &&\n        pt.consval >= consFilter.min && pt.consval <= consFilter.max &&\n        pt.phylo_dist >= phyloDistFilter.min && pt.phylo_dist <= phyloDistFilter.max\n      ) {\n        return \"blue\"\n      }\n      else {\n        return \"lightgray\"\n      }\n    }\n  \n    function pointOpacity(pt) {\n      return (pt.indiv === selectedPointID) ? 0.85 : 0.5;\n    }\n    \n    const t = d3.transition()\n      .duration(1000);\n    canvas.selectAll(\"circle\")\n      .data(optimData)\n      .join(\n        enter => enter.append(\"circle\")\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"r\", 3)\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d))\n          .on('mouseover', function (d, i) {\n            // d is the data object, i is the array index, and this is the svg element\n            d3.select(this)\n              .attr('opacity', 0.85)\n              .attr(\"r\", 5)\n          })\n          .on('mouseout', function (d, i) {\n            d3.select(this)\n              .attr('opacity', d => pointOpacity(d))\n              .attr('r', 3)\n          })\n          .on('click', function(d, i) {\n            setSelectedMix(d.indiv);\n            selectedPointID = d.indiv;\n            d3.select(\"#selected-point\")\n              .attr(\"id\", null)\n              .attr(\"fill\", g => pointColor(g))\n              .attr(\"opacity\", g => pointOpacity(g));\n            d3.select(this)\n              .attr(\"fill\", \"red\")\n              .attr(\"opacity\", 0.9)\n              .attr(\"id\", \"selected-point\");\n          }),\n        update => update.transition(t)\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d)),\n        exit => exit.remove()\n      );\n\n  }\n\n\n  return (\n    <div id=\"optim-browser\">\n    <div id=\"ob-slider-pane\">\n      <h2>Filters</h2>\n      <Slider name=\"Cost\" range={costRange} update={setCostFilter} />\n      <Slider name=\"Bloom\" range={bloomRange} update={setBloomFilter} />\n      <Slider name=\"Shannon Diversity\" range={shannonRange} update={setShannonFilter} />\n      <Slider name=\"Conservatism\" range={consRange} update={setConsFilter} />\n      <Slider name=\"Phylo Dist\" range={phyloDistRange} update={setPhyloDistFilter} />\n\n    </div>\n      \n    <div id=\"ob-plot-pane\">\n      <h2>Scatter Plot</h2>\n      <AxisControl\n        xAxis={xAxisObjective}\n        setXAxis={setXAxisObjective}\n        yAxis={yAxisObjective}\n        setYAxis={setYAxisObjective}\n      />\n      <div id=\"plot-pane\"></div>\n    </div>\n\n      <ReportPane mixid={selectedMix}/>\n    </div>\n  )\n}\n\n\nconst AxisControl = ({xAxis, setXAxis, yAxis, setYAxis}) => {\n\n  return (\n    <div id=\"axis-control\">\n      <AxisSelect value={xAxis} updater={setXAxis} />\n      <AxisSelect value={yAxis} updater={setYAxis} />\n    </div>\n  )\n}\n\n/** material-ui style definitions */\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 250,\n  },\n  boldCell: {\n    fontWeight: \"bolder\",\n  },\n}));\n\nconst AxisSelect = ({label, value, updater}) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel >{label}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={value}\n        onChange={e=>updater(e.target.value)}>\n        \n        <MenuItem value={\"bloom\"}>Bloom</MenuItem>\n        <MenuItem value={\"cost\"}>Cost</MenuItem>\n        <MenuItem value={\"shannon\"}>Shannon diversity</MenuItem>\n        <MenuItem value={\"consval\"}>Conservatism</MenuItem>\n        <MenuItem value={\"phylo_dist\"}>Phylogenetic distance</MenuItem>\n      \n      </Select>\n    </FormControl>\n  )\n}\n\n\nconst Slider = ({name, range, update}) => {\n  const[filterMin, setFilterMin] = useState(0);\n  const[filterMax, setFilterMax] = useState(1);\n\n  useEffect(() => {\n    setFilterMin(range.min);\n    setFilterMax(range.max);\n  }, [range]);\n\n  function handleMinChange(e) {\n    setFilterMin(+e.currentTarget.value);\n    update({min: +e.currentTarget.value, max: filterMax});\n  }\n  function handleMaxChange(e) {\n    setFilterMax(+e.currentTarget.value);\n    update({min: filterMin, max: +e.currentTarget.value});\n  }\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider-header\">\n        <div className=\"slider-objective-name\">{name}</div>\n        <div className=\"slider-objective-range\">({range.min}-{range.max})</div>\n      </div>\n      <div className=\"slider-input-row\">\n        Min: \n        <input type=\"text\" className=\"slider-input\" value={filterMin} onChange={handleMinChange}></input>\n        Max: \n        <input type=\"text\" className=\"slider-input\" value={filterMax} onChange={handleMaxChange}></input>\n      </div>\n    </div>\n  )\n}\n\n\nconst ReportPane = ({ mixid, scores }) => {\n  const [composition, setComposition] = useState([{species:\"None\", weight:0.0}]);\n\n  const compSort = (a, b) => {\n    if (a.species < b.species) { return -1 }\n    if (b.species < a.species) { return 1}\n    return 0\n  }\n\n  /** LOAD MIX COMPOSITION ON MIXID CHANGE */\n  useEffect(() => {\n    if (mixid === null){ return }\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + `/static/data/mixes/mix${mixid}.csv`;\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, (d) => {\n        return {\n          id: +d.specindices,\n          species: d.specnames,\n          weight: +d.weights\n        }\n      });\n      data.sort(compSort)\n      setComposition(data);\n    };\n    fetchData();\n  }, [mixid])\n\n  return(\n    <div id=\"ob-report-pane\">\n      <div id='ob-report-table'>\n        <h2>Mix Composition</h2>\n          {/* <MixScoreTable scores={scores} /> */}\n          <MixCompositionTable composition={composition} />\n      </div>\n    </div>\n  )\n}\n\n\nconst MixScoreTable = (scores) => {\n  \n  return (\n    <div id=\"mix-score-table\">\n      Mix Score Table\n    </div>\n  )\n}\n\n\nconst MixCompositionTable = ({composition}) => {\n  const classes = useStyles();\n\n  return(\n    <div id=\"mix-composition-table\">\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.boldCell} style={{padding: \"6px\"}}>Species</TableCell>\n            <TableCell className={classes.boldCell} align=\"right\" style={{padding: \"6px\"}}>Weight&nbsp;(oz)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {composition.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\" style={{padding: \"6px\"}}>\n                {row.species.replace(\"_\", \" \")}\n              </TableCell>\n              <TableCell align=\"right\" style={{padding: \"6px\"}}>\n                {Math.round(16*row.weight)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\n\nconst axisLabels = {\n  bloom: \"Bloom\",\n  cost: \"Cost\",\n  shannon: \"Shannon diversity\",\n  consval: \"Conservatism\",\n  phylo_dist: \"Phylogenetic distance\"\n};\n\n\nexport { OptimBrowser }","import React, { Component } from 'react';\nimport './App.css';\nimport { OptimBrowser } from '../OptimBrowser';\n\nconst App = () => {\n    return (\n        <div id=\"app-container\">\n            <OptimBrowser />\n        </div>\n      )\n  \n}\n\n\nexport {App}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n  \n"],"sourceRoot":""}