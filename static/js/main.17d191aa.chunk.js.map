{"version":3,"sources":["OptimBrowser/OptimBrowser.jsx","App/App.jsx","index.js"],"names":["OptimBrowser","panedata","setpane","margin","useState","canvas","setCanvas","optimData","setOptimData","selectedMix","setSelectedMix","xAxisObjective","yAxisObjective","min","max","costRange","setCostRange","bloomRange","setBloomRange","shannonRange","setShannonRange","consRange","setConsRange","phyloDistRange","setPhyloDistRange","costFilter","setCostFilter","bloomFilter","setBloomFilter","shannonFilter","setShannonFilter","consFilter","setConsFilter","phyloDistFilter","setPhyloDistFilter","useEffect","c","d3","append","attr","xmax","d","cost","xScale","domain","range","xAxis","scale","ticks","call","figW","style","text","ymax","bloom","yScale","yAxis","figH","a","dataURL","process","console","log","indiv","phylo_dist","shannon","consval","grass_spec_frac","grass_weight_frac","data","Math","floor","ceil","fetchData","selectedPointID","pointColor","pt","pointOpacity","t","duration","selectAll","join","enter","on","i","this","g","update","transition","exit","remove","updatePlot","id","name","mixid","Slider","filterMin","setFilterMin","filterMax","setFilterMax","className","type","value","onChange","e","currentTarget","ReportPane","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17d191aa.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport './OptimBrowser.css';\n\n\nconst OptimBrowser = ({ panedata, setpane }) => {\n\n  const figH = 600;\n  const figW = 780;\n  const margin = ({top:50, right:50, bottom: 50, left: 50});\n\n  const [canvas, setCanvas] = useState(null);\n  const [optimData, setOptimData] = useState(null);\n  const [selectedMix, setSelectedMix] = useState(null);\n  const [xAxisObjective, setXAxisObjective] = useState(\"cost\");\n  const [yAxisObjective, setYAxisObjective] = useState(\"bloom\");\n  const [costRange, setCostRange] = useState({min: 0, max: 100});\n  const [bloomRange, setBloomRange] = useState({min: 0, max: 100});\n  const [shannonRange, setShannonRange] = useState({min: 0, max: 100});\n  const [consRange, setConsRange] = useState({min: 0, max: 100});\n  const [phyloDistRange, setPhyloDistRange] = useState({min: 0, max: 100});\n  const [costFilter, setCostFilter] = useState({min: 0, max: 100});\n  const [bloomFilter, setBloomFilter] = useState({min: 0, max: 100});\n  const [shannonFilter, setShannonFilter] = useState({min: 0, max: 100});\n  const [consFilter, setConsFilter] = useState({min: 0, max: 100});\n  const [phyloDistFilter, setPhyloDistFilter] = useState({min: 0, max: 100});\n\n  /** Init the svg div */\n  useEffect(() => {\n    const c = d3.select(\"#plot-pane\")\n      .append(\"svg\")\n        .attr(\"width\", figW)\n        .attr(\"height\", figH);\n    setCanvas(c);\n  }, [])\n\n  /** Static graph component setup */\n  useEffect(() => {\n    if (canvas === null || optimData === null) {\n      return;\n    }\n    const xmin = 0;\n    const xmax = d3.max(optimData, d=>+d.cost);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(4);\n    canvas.append(\"g\")\n      .attr(\"transform\", `translate(0, ${figH - margin.bottom})`)\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"transform\", `translate(${figW/2}, ${figH - margin.bottom + 40})`)\n      .style(\"text-anchor\", \"middle\")\n      .text(xAxisObjective);\n\n    const ymin = 15;\n    const ymax = d3.max(optimData, d=>+d.bloom);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"transform\", `translate(18, ${figH/2}) rotate(-90)`)\n      .style(\"text-anchor\", \"middle\")\n      .text(yAxisObjective);\n  }, [canvas, optimData, xAxisObjective, yAxisObjective])\n\n  /** Load static data */\n  useEffect(() => {\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + \"/static/data/scores.csv\";\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, function(d) {\n        return {\n          indiv: +d.indiv,\n          cost: +d.cost,\n          phylo_dist: +d.phylo_dist,\n          bloom: +d.bloom,\n          shannon: +d.shannon,\n          consval: +d.consval,\n          grass_spec_frac: +d.grass_spec_frac,\n          grass_weight_frac: +d.grass_weight_frac\n        }\n      });\n      setCostRange({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomRange({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonRange({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsRange({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistRange({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setCostFilter({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomFilter({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonFilter({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsFilter({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistFilter({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setOptimData(data);\n      // setOptimData(data.slice(1,10));\n\n    };\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    if (canvas === null || optimData === null){ return }\n    updatePlot();\n  }, [canvas, optimData, costFilter, bloomFilter, shannonFilter, consFilter, phyloDistFilter])\n\n  function updatePlot() {\n    var selectedPointID = selectedMix; // This is awkward - need to track \n\n    /** Axes */\n    const xmin = 0;\n    const xmax = d3.max(optimData, d=>+d.cost);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const ymin = 15;\n    const ymax = d3.max(optimData, d=>+d.bloom);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n\n    function pointColor(pt) {\n      if (pt.indiv === selectedPointID) { return \"red\" }\n      else if (\n        pt.bloom >= bloomFilter.min && pt.bloom <= bloomFilter.max &&\n        pt.cost >= costFilter.min && pt.cost <= costFilter.max &&\n        pt.shannon >= shannonFilter.min && pt.shannon <= shannonFilter.max &&\n        pt.consval >= consFilter.min && pt.consval <= consFilter.max &&\n        pt.phylo_dist >= phyloDistFilter.min && pt.phylo_dist <= phyloDistFilter.max\n      ) {\n        return \"blue\"\n      }\n      else {\n        return \"lightgray\"\n      }\n    }\n  \n    function pointOpacity(pt) {\n      return (pt.indiv === selectedPointID) ? 0.85 : 0.5;\n    }\n    \n    const t = d3.transition()\n      .duration(100);\n    canvas.selectAll(\"circle\")\n      .data(optimData)\n      .join(\n        enter => enter.append(\"circle\")\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"r\", 3)\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d))\n          .on('mouseover', function (d, i) {\n            // d is the data object, i is the array index, and this is the svg element\n            d3.select(this)\n              .attr('opacity', 0.85)\n              .attr(\"r\", 5)\n          })\n          .on('mouseout', function (d, i) {\n            d3.select(this)\n              .attr('opacity', d => pointOpacity(d))\n              .attr('r', 3)\n          })\n          .on('click', function(d, i) {\n            setSelectedMix(d.indiv);\n            selectedPointID = d.indiv;\n            d3.select(\"#selected-point\")\n              .attr(\"id\", null)\n              .attr(\"fill\", g => pointColor(g))\n              .attr(\"opacity\", g => pointOpacity(g));\n            d3.select(this)\n              .attr(\"fill\", \"red\")\n              .attr(\"opacity\", 0.9)\n              .attr(\"id\", \"selected-point\");\n          }),\n        update => update.transition(t)\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d)),\n        exit => exit.remove()\n      );\n\n  }\n\n\n  return (\n    <div id=\"optim-browser\">\n    <div id=\"ob-slider-pane\">\n      <h2>Filters</h2>\n      <Slider name=\"Cost\" range={costRange} update={setCostFilter} />\n      <Slider name=\"Bloom\" range={bloomRange} update={setBloomFilter} />\n      <Slider name=\"Shannon Diversity\" range={shannonRange} update={setShannonFilter} />\n      <Slider name=\"Conservatism\" range={consRange} update={setConsFilter} />\n      <Slider name=\"Phylo Dist\" range={phyloDistRange} update={setPhyloDistFilter} />\n\n    </div>\n      \n    <div id=\"ob-plot-pane\">\n      <h2>Scatter Plot</h2>\n      <div id=\"plot-pane\"></div>\n    </div>\n\n      <ReportPane mixid={selectedMix}/>\n    </div>\n  )\n}\n\n\n\nconst Slider = ({name, range, update}) => {\n  const[filterMin, setFilterMin] = useState(0);\n  const[filterMax, setFilterMax] = useState(1);\n\n  useEffect(() => {\n    setFilterMin(range.min);\n    setFilterMax(range.max);\n  }, [range]);\n\n  function handleMinChange(e) {\n    setFilterMin(+e.currentTarget.value);\n    update({min: +e.currentTarget.value, max: filterMax});\n  }\n  function handleMaxChange(e) {\n    setFilterMax(+e.currentTarget.value);\n    update({min: filterMin, max: +e.currentTarget.value});\n  }\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider-header\">\n        <div className=\"slider-objective-name\">{name}</div>\n        <div className=\"slider-objective-range\">({range.min}-{range.max})</div>\n      </div>\n      <div className=\"slider-input-row\">\n        Min: \n        <input type=\"text\" className=\"slider-input\" value={filterMin} onChange={handleMinChange}></input>\n        Max: \n        <input type=\"text\" className=\"slider-input\" value={filterMax} onChange={handleMaxChange}></input>\n      </div>\n    </div>\n  )\n}\n\n\nconst ReportPane = ({ mixid }) => {\n  const [open, setOpen] = useState(false);\n\n\n  return(\n    <div id=\"ob-report-pane\">\n      <div id='ob-report-table'>\n        <h2>Report Pane</h2>\n          Selected mix: {mixid}\n      </div>\n      {/* <div id='ob-report-save-button'>\n        {mixid !== null && authenticationService.currentUserValue &&\n          <button type=\"button\" onClick={handleSaveButtonClick}>Save to project</button> }\n      </div>\n      <CopyMixDialog selectedMix={mixid} onClose={handleSaveDialogClose} open={open} /> */}\n    </div>\n  )\n}\n\n\nexport { OptimBrowser }","import React, { Component } from 'react';\nimport './App.css';\nimport { OptimBrowser } from '../OptimBrowser';\n\nconst App = () => {\n    return (\n        <div id=\"app-container\">\n            <OptimBrowser />\n        </div>\n      )\n  \n}\n\n\nexport {App}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n\n// import { faReply, faCloud, faSun, faCloudSun, faEdit, faEye, faEllipsisH, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n"],"sourceRoot":""}