{"version":3,"sources":["OptimBrowser/OptimBrowser.jsx","App/App.jsx","index.js"],"names":["OptimBrowser","margin","useState","canvas","setCanvas","optimData","setOptimData","selectedMix","setSelectedMix","xAxisObjective","setXAxisObjective","yAxisObjective","setYAxisObjective","min","max","costRange","setCostRange","bloomRange","setBloomRange","shannonRange","setShannonRange","consRange","setConsRange","phyloDistRange","setPhyloDistRange","costFilter","setCostFilter","bloomFilter","setBloomFilter","shannonFilter","setShannonFilter","consFilter","setConsFilter","phyloDistFilter","setPhyloDistFilter","useEffect","c","d3","append","attr","xmax","d","cost","xScale","domain","range","xAxis","scale","ticks","call","figW","style","text","axisLabels","ymax","bloom","yScale","yAxis","figH","a","dataURL","process","console","log","indiv","phylodist","phylo_dist","shannon","consval","grass_spec_frac","grass_weight_frac","data","Math","floor","ceil","fetchData","selectedPointID","xmin","select","ymin","pointColor","pt","pointOpacity","t","duration","selectAll","join","enter","on","i","this","g","update","transition","exit","remove","updatePlot","id","name","setXAxis","setYAxis","mixid","scores","s","find","e","mixRelativeScores","AxisControl","label","value","updater","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","table","boldCell","fontWeight","AxisSelect","classes","FormControl","className","InputLabel","Select","labelId","onChange","target","MenuItem","Slider","filterMin","setFilterMin","filterMax","setFilterMax","type","currentTarget","ReportPane","species","weight","composition","setComposition","compSort","b","specindices","specnames","weights","sort","MixScoreTable","labels","map","vals","bandwidth","MixCompositionTable","Table","size","aria-label","TableHead","TableRow","TableCell","padding","align","TableBody","row","key","component","scope","replace","round","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e81ff34c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Select from '@material-ui/core/Select';\nimport * as d3 from 'd3';\nimport './OptimBrowser.css';\n\n\nconst OptimBrowser = () => {\n\n  const figH = 580;\n  const figW = 690;\n  const margin = ({top:10, right:40, bottom: 50, left: 50});\n\n  const [canvas, setCanvas] = useState(null);\n  const [optimData, setOptimData] = useState(null);\n  const [selectedMix, setSelectedMix] = useState(null);\n  const [xAxisObjective, setXAxisObjective] = useState(\"cost\");\n  const [yAxisObjective, setYAxisObjective] = useState(\"bloom\");\n  const [costRange, setCostRange] = useState({min: 0, max: 100});\n  const [bloomRange, setBloomRange] = useState({min: 0, max: 100});\n  const [shannonRange, setShannonRange] = useState({min: 0, max: 100});\n  const [consRange, setConsRange] = useState({min: 0, max: 100});\n  const [phyloDistRange, setPhyloDistRange] = useState({min: 0, max: 100});\n  const [costFilter, setCostFilter] = useState({min: 0, max: 100});\n  const [bloomFilter, setBloomFilter] = useState({min: 0, max: 100});\n  const [shannonFilter, setShannonFilter] = useState({min: 0, max: 100});\n  const [consFilter, setConsFilter] = useState({min: 0, max: 100});\n  const [phyloDistFilter, setPhyloDistFilter] = useState({min: 0, max: 100});\n\n  /** Init the svg div */\n  useEffect(() => {\n    const c = d3.select(\"#plot-pane\")\n      .append(\"svg\")\n        .attr(\"width\", figW)\n        .attr(\"height\", figH);\n    setCanvas(c);\n  }, [])\n\n  /** Static graph component setup */\n  useEffect(() => {\n    if (canvas === null || optimData === null) {\n      return;\n    }\n    const xmin = 0;\n    const xmax = d3.max(optimData, d=>+d.cost);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(4);\n    canvas.append(\"g\")\n      .attr(\"id\", \"x-axis\")\n      .attr(\"transform\", `translate(0, ${figH - margin.bottom})`)\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"x-axis-label\")\n      .attr(\"transform\", `translate(${figW/2}, ${figH - margin.bottom + 40})`)\n      .style(\"text-anchor\", \"middle\")\n      .text(axisLabels[xAxisObjective]);\n\n    const ymin = 15;\n    const ymax = d3.max(optimData, d=>+d.bloom);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.append(\"g\")\n      .attr(\"id\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"y-axis-label\")\n      .attr(\"transform\", `translate(18, ${figH/2}) rotate(-90)`)\n      .style(\"text-anchor\", \"middle\")\n      .text(axisLabels[yAxisObjective]);\n  }, [canvas, optimData])\n  // }, [canvas, optimData, xAxisObjective, yAxisObjective])\n\n  /** Load static data */\n  useEffect(() => {\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + \"/static/data/scores.csv\";\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, function(d) {\n        return {\n          indiv: +d.indiv,\n          cost: +d.cost,\n          phylodist: +d.phylo_dist,\n          bloom: +d.bloom,\n          shannon: +d.shannon,\n          consval: +d.consval,\n          grass_spec_frac: +d.grass_spec_frac,\n          grass_weight_frac: +d.grass_weight_frac\n        }\n      });\n      setCostRange({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomRange({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonRange({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsRange({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistRange({\n        min: Math.floor(d3.min(data, d=>+d.phylodist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylodist))\n      });\n      setCostFilter({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomFilter({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonFilter({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsFilter({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistFilter({\n        min: Math.floor(d3.min(data, d=>+d.phylodist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylodist))\n      });\n      setOptimData(data);\n      // setOptimData(data.slice(1,10));\n\n    };\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    if (canvas === null || optimData === null){ return }\n    updatePlot();\n  }, [canvas, optimData, costFilter, bloomFilter, shannonFilter, consFilter, phyloDistFilter, xAxisObjective, yAxisObjective])\n\n  function updatePlot() {\n    var selectedPointID = selectedMix; // This is awkward - need to track \n\n    /** Axes */\n    const xmin = Math.floor(0.98 * d3.min(optimData, d=>+d[xAxisObjective]));\n    const xmax = d3.max(optimData, d=>+d[xAxisObjective]);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(5);\n    canvas.select(\"g#x-axis\")\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#x-axis-label\")\n      .text(axisLabels[xAxisObjective]);\n\n    const ymin = Math.floor(0.98 * d3.min(optimData, d=>+d[yAxisObjective]));\n    const ymax = d3.max(optimData, d=>+d[yAxisObjective]);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.select(\"g#y-axis\")\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#y-axis-label\")\n      .text(axisLabels[yAxisObjective]);\n    \n    function pointColor(pt) {\n      if (pt.indiv === selectedPointID) { return \"red\" }\n      else if (\n        pt.bloom >= bloomFilter.min && pt.bloom <= bloomFilter.max &&\n        pt.cost >= costFilter.min && pt.cost <= costFilter.max &&\n        pt.shannon >= shannonFilter.min && pt.shannon <= shannonFilter.max &&\n        pt.consval >= consFilter.min && pt.consval <= consFilter.max &&\n        pt.phylodist >= phyloDistFilter.min && pt.phylodist <= phyloDistFilter.max\n      ) {\n        return \"blue\"\n      }\n      else {\n        return \"lightgray\"\n      }\n    }\n  \n    function pointOpacity(pt) {\n      return (pt.indiv === selectedPointID) ? 0.85 : 0.5;\n    }\n    \n    const t = d3.transition()\n      .duration(1000);\n    canvas.selectAll(\"circle\")\n      .data(optimData)\n      .join(\n        enter => enter.append(\"circle\")\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"r\", 3)\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d))\n          .on('mouseover', function (d, i) {\n            // d is the data object, i is the array index, and this is the svg element\n            d3.select(this)\n              .attr('opacity', 0.85)\n              .attr(\"r\", 5)\n          })\n          .on('mouseout', function (d, i) {\n            d3.select(this)\n              .attr('opacity', d => pointOpacity(d))\n              .attr('r', 3)\n          })\n          .on('click', function(d, i) {\n            setSelectedMix(d.indiv);\n            selectedPointID = d.indiv;\n            d3.select(\"#selected-point\")\n              .attr(\"id\", null)\n              .attr(\"fill\", g => pointColor(g))\n              .attr(\"opacity\", g => pointOpacity(g));\n            d3.select(this)\n              .attr(\"fill\", \"red\")\n              .attr(\"opacity\", 0.9)\n              .attr(\"id\", \"selected-point\");\n          }),\n        update => update.transition(t)\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d)),\n        exit => exit.remove()\n      );\n\n  }\n\n  const mixRelativeScores = () => {\n    if (optimData === null || selectedMix === null) { return }\n    \n    console.log(selectedMix);\n    const s = optimData.find(e => e.indiv === selectedMix);\n    const vals = {\n      bloom: (s.bloom - bloomRange.min) / (bloomRange.max - bloomRange.min),\n      cost: (s.cost - costRange.min) / (costRange.max - costRange.min),\n      shannon: (s.shannon - shannonRange.min) / (shannonRange.max - shannonRange.min),\n      consval: (s.consval - consRange.min) / (consRange.max - consRange.min),\n      phylodist: (s.phylodist - phyloDistRange.min) / (phyloDistRange.max - phyloDistRange.min)\n    }\n\n    return vals\n  }\n\n  return (\n    <div id=\"optim-browser\">\n    <div id=\"ob-slider-pane\">\n      <h2>Filters</h2>\n      <Slider name=\"Cost\" range={costRange} update={setCostFilter} />\n      <Slider name=\"Bloom\" range={bloomRange} update={setBloomFilter} />\n      <Slider name=\"Shannon Diversity\" range={shannonRange} update={setShannonFilter} />\n      <Slider name=\"Conservatism\" range={consRange} update={setConsFilter} />\n      <Slider name=\"Phylo Dist\" range={phyloDistRange} update={setPhyloDistFilter} />\n\n    </div>\n      \n    <div id=\"ob-plot-pane\">\n      <h2>Scatter Plot</h2>\n      <AxisControl\n        xAxis={xAxisObjective}\n        setXAxis={setXAxisObjective}\n        yAxis={yAxisObjective}\n        setYAxis={setYAxisObjective}\n      />\n      <div id=\"plot-pane\"></div>\n    </div>\n\n      <ReportPane mixid={selectedMix} scores={mixRelativeScores()}/>\n    </div>\n  )\n}\n\n\nconst AxisControl = ({xAxis, setXAxis, yAxis, setYAxis}) => {\n\n  return (\n    <div id=\"axis-control\">\n      <AxisSelect label=\"x-axis\" value={xAxis} updater={setXAxis} />\n      <AxisSelect label=\"y-axis\" value={yAxis} updater={setYAxis} />\n    </div>\n  )\n}\n\n/** material-ui style definitions */\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 250,\n  },\n  boldCell: {\n    fontWeight: \"bolder\",\n  },\n}));\n\nconst AxisSelect = ({label, value, updater}) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel >{label}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={value}\n        onChange={e=>updater(e.target.value)}>\n        \n        <MenuItem value={\"bloom\"}>Bloom</MenuItem>\n        <MenuItem value={\"cost\"}>Cost</MenuItem>\n        <MenuItem value={\"shannon\"}>Shannon diversity</MenuItem>\n        <MenuItem value={\"consval\"}>Conservatism</MenuItem>\n        <MenuItem value={\"phylodist\"}>Phylogenetic distance</MenuItem>\n      \n      </Select>\n    </FormControl>\n  )\n}\n\n\nconst Slider = ({name, range, update}) => {\n  const[filterMin, setFilterMin] = useState(0);\n  const[filterMax, setFilterMax] = useState(1);\n\n  useEffect(() => {\n    setFilterMin(range.min);\n    setFilterMax(range.max);\n  }, [range]);\n\n  function handleMinChange(e) {\n    setFilterMin(+e.currentTarget.value);\n    update({min: +e.currentTarget.value, max: filterMax});\n  }\n  function handleMaxChange(e) {\n    setFilterMax(+e.currentTarget.value);\n    update({min: filterMin, max: +e.currentTarget.value});\n  }\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider-header\">\n        <div className=\"slider-objective-name\">{name}</div>\n        <div className=\"slider-objective-range\">({range.min}-{range.max})</div>\n      </div>\n      <div className=\"slider-input-row\">\n        Min: \n        <input type=\"text\" className=\"slider-input\" value={filterMin} onChange={handleMinChange}></input>\n        Max: \n        <input type=\"text\" className=\"slider-input\" value={filterMax} onChange={handleMaxChange}></input>\n      </div>\n    </div>\n  )\n}\n\n\nconst ReportPane = ({ mixid, scores }) => {\n  const [composition, setComposition] = useState([{species:\"None\", weight:0.0}]);\n\n  const compSort = (a, b) => {\n    if (a.species < b.species) { return -1 }\n    if (b.species < a.species) { return 1}\n    return 0\n  }\n\n  /** LOAD MIX COMPOSITION ON MIXID CHANGE */\n  useEffect(() => {\n    if (mixid === null){ return }\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + `/static/data/mixes/mix${mixid}.csv`;\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, (d) => {\n        return {\n          id: +d.specindices,\n          species: d.specnames,\n          weight: +d.weights\n        }\n      });\n      data.sort(compSort)\n      setComposition(data);\n    };\n    fetchData();\n  }, [mixid])\n\n  return(\n    <div id=\"ob-report-pane\">\n      <div id='ob-report-table'>\n        <h2>Mix Composition</h2>\n          <MixScoreTable scores={scores} />\n          <MixCompositionTable composition={composition} />\n      </div>\n    </div>\n  )\n}\n\n\nconst MixScoreTable = ({scores}) => {\n\n  const figH = 150;\n  const figW = 290;\n  const margin = {top: 20, right: 10, bottom: 5, left: 60};\n  const labels = [\"Bloom\", \"Cost\", \"Shan Div\", \"Conserv\", \"Phy Dist\"];\n  const xScale = d3.scaleLinear()\n    .domain([0,1])\n    .range([margin.left, figW - margin.right])\n  const yScale = d3.scaleBand()\n    .domain(labels.map(d => d))\n    .range([margin.top, figH - margin.bottom])\n    // .padding(0.1)\n    // .round(true)\n\n  const [canvas, setCanvas] = useState(null);\n\n  /** Create the SVG canvas */\n  useEffect(() => {\n    const c = d3.select(\"#mix-score-plot\")\n      .append(\"svg\")\n        .attr(\"width\", figW)\n        .attr(\"height\", figH)\n    const xAxis = d3.axisTop()\n      .scale(xScale)\n      .ticks(6);\n    c.append(\"g\")\n      .attr(\"id\", \"score-plot-xaxis\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n      .call(xAxis)\n      .attr(\"stroke-width\", 1)\n      .attr(\"font-size\", \"9pt\")\n      .call(g => g.select(\".domain\").remove())\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(0);\n    c.append(\"g\")\n      .attr(\"id\", \"score-plot-yaxis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis)\n      .attr(\"stroke-width\", 1)\n      .attr(\"font-size\", \"9pt\")\n      .call(g => g.select(\".domain\").remove())\n      .call(g => g.selectAll(\"line\").remove());\n\n    setCanvas(c);\n  }, [])\n\n  /** Display axes */\n  useEffect(() => {\n    if(canvas === null) {return}\n    const vals = [scores.bloom, scores.cost, scores.shannon, scores.consval, scores.phylodist];\n    const t = d3.transition()\n      .duration(500);\n\n    canvas.selectAll(\"line.plot-element\")\n      .data(vals)\n      .join(\n        enter => enter.append(\"line\")\n          .attr(\"class\", \"plot-element\")\n          .style(\"stroke\", \"black\")\n          .attr(\"x1\", xScale(0))\n          .attr(\"x2\", d => xScale(d))\n          .attr(\"y1\", (d, i) => yScale(labels[i]) + yScale.bandwidth()/2 )\n          .attr(\"y2\", (d, i) => yScale(labels[i]) + yScale.bandwidth()/2 ),\n        update => update.transition(t)\n          .attr(\"x2\", d => xScale(d)),\n        exit => exit.remove()\n      )\n    \n    canvas.selectAll(\"circle\")\n      .data(vals)\n      .join(\n        enter => enter.append(\"circle\")\n          .attr(\"cx\", d => xScale(d))\n          .attr(\"cy\", (d, i) => yScale(labels[i]) + yScale.bandwidth()/2 )\n          .attr(\"r\", 4)\n          .style(\"fill\", \"orange\")\n          .style(\"stroke\", \"black\"),\n        update => update.transition(t)\n          .attr(\"cx\", d => xScale(d)),\n        exit => exit.remove()\n      )\n    \n\n  }, [scores])\n\n  return (\n    <div id=\"mix-score-panel\">\n      <div id=\"mix-score-plot\"></div>\n    </div>\n  )\n}\n\n\nconst MixCompositionTable = ({composition}) => {\n  const classes = useStyles();\n\n  return(\n    <div id=\"mix-composition-table\">\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.boldCell} style={{padding: \"6px\"}}>Species</TableCell>\n            <TableCell className={classes.boldCell} align=\"right\" style={{padding: \"6px\"}}>Weight&nbsp;(oz)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {composition.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\" style={{padding: \"3px\"}}>\n                {row.species.replace(\"_\", \" \")}\n              </TableCell>\n              <TableCell align=\"right\" style={{padding: \"3px\"}}>\n                {Math.round(16*row.weight)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\n\nconst axisLabels = {\n  bloom: \"Bloom\",\n  cost: \"Cost\",\n  shannon: \"Shannon diversity\",\n  consval: \"Conservatism\",\n  phylodist: \"Phylogenetic distance\"\n};\n\n\nexport { OptimBrowser }","import React, { Component } from 'react';\nimport './App.css';\nimport { OptimBrowser } from '../OptimBrowser';\n\nconst App = () => {\n    return (\n        <div id=\"app-container\">\n            <OptimBrowser />\n        </div>\n      )\n  \n}\n\n\nexport {App}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n  \n"],"sourceRoot":""}