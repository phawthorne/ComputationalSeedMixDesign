{"version":3,"sources":["OptimBrowser/OptimBrowser.jsx","App/App.jsx","index.js"],"names":["OptimBrowser","panedata","setpane","margin","useState","canvas","setCanvas","optimData","setOptimData","selectedMix","setSelectedMix","xAxisObjective","setXAxisObjective","yAxisObjective","setYAxisObjective","min","max","costRange","setCostRange","bloomRange","setBloomRange","shannonRange","setShannonRange","consRange","setConsRange","phyloDistRange","setPhyloDistRange","costFilter","setCostFilter","bloomFilter","setBloomFilter","shannonFilter","setShannonFilter","consFilter","setConsFilter","phyloDistFilter","setPhyloDistFilter","useEffect","c","d3","append","attr","xmax","d","cost","xScale","domain","range","xAxis","scale","ticks","call","figW","style","text","ymax","bloom","yScale","yAxis","figH","a","dataURL","process","console","log","indiv","phylo_dist","shannon","consval","grass_spec_frac","grass_weight_frac","data","Math","floor","ceil","fetchData","selectedPointID","xmin","select","ymin","pointColor","pt","pointOpacity","t","duration","selectAll","join","enter","on","i","this","g","update","transition","exit","remove","updatePlot","id","name","setXAxis","setYAxis","mixid","AxisControl","value","updater","useStyles","makeStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","AxisSelect","label","classes","FormControl","className","InputLabel","Select","labelId","onChange","e","target","MenuItem","Slider","filterMin","setFilterMin","filterMax","setFilterMax","type","currentTarget","ReportPane","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63554f0a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';import * as d3 from 'd3';\nimport './OptimBrowser.css';\n\n\nconst OptimBrowser = ({ panedata, setpane }) => {\n\n  const figH = 600;\n  const figW = 780;\n  const margin = ({top:50, right:50, bottom: 50, left: 50});\n\n  const [canvas, setCanvas] = useState(null);\n  const [optimData, setOptimData] = useState(null);\n  const [plotData, setPlotData] = useState(null);\n  const [selectedMix, setSelectedMix] = useState(null);\n  const [xAxisObjective, setXAxisObjective] = useState(\"cost\");\n  const [yAxisObjective, setYAxisObjective] = useState(\"bloom\");\n  const [costRange, setCostRange] = useState({min: 0, max: 100});\n  const [bloomRange, setBloomRange] = useState({min: 0, max: 100});\n  const [shannonRange, setShannonRange] = useState({min: 0, max: 100});\n  const [consRange, setConsRange] = useState({min: 0, max: 100});\n  const [phyloDistRange, setPhyloDistRange] = useState({min: 0, max: 100});\n  const [costFilter, setCostFilter] = useState({min: 0, max: 100});\n  const [bloomFilter, setBloomFilter] = useState({min: 0, max: 100});\n  const [shannonFilter, setShannonFilter] = useState({min: 0, max: 100});\n  const [consFilter, setConsFilter] = useState({min: 0, max: 100});\n  const [phyloDistFilter, setPhyloDistFilter] = useState({min: 0, max: 100});\n\n  /** Init the svg div */\n  useEffect(() => {\n    const c = d3.select(\"#plot-pane\")\n      .append(\"svg\")\n        .attr(\"width\", figW)\n        .attr(\"height\", figH);\n    setCanvas(c);\n  }, [])\n\n  /** Static graph component setup */\n  useEffect(() => {\n    if (canvas === null || optimData === null) {\n      return;\n    }\n    const xmin = 0;\n    const xmax = d3.max(optimData, d=>+d.cost);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(4);\n    canvas.append(\"g\")\n      .attr(\"id\", \"x-axis\")\n      .attr(\"transform\", `translate(0, ${figH - margin.bottom})`)\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"x-axis-label\")\n      .attr(\"transform\", `translate(${figW/2}, ${figH - margin.bottom + 40})`)\n      .style(\"text-anchor\", \"middle\")\n      .text(xAxisObjective);\n\n    const ymin = 15;\n    const ymax = d3.max(optimData, d=>+d.bloom);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.append(\"g\")\n      .attr(\"id\", \"y-axis\")\n      .attr(\"transform\", `translate(${margin.left}, 0)`)\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.append(\"text\")\n      .attr(\"id\", \"y-axis-label\")\n      .attr(\"transform\", `translate(18, ${figH/2}) rotate(-90)`)\n      .style(\"text-anchor\", \"middle\")\n      .text(yAxisObjective);\n  }, [canvas, optimData])\n  // }, [canvas, optimData, xAxisObjective, yAxisObjective])\n\n  /** Load static data */\n  useEffect(() => {\n    async function fetchData() {\n      const dataURL = process.env.PUBLIC_URL + \"/static/data/scores.csv\";\n      console.log(dataURL);\n      const data = await d3.csv(dataURL, function(d) {\n        return {\n          indiv: +d.indiv,\n          cost: +d.cost,\n          phylo_dist: +d.phylo_dist,\n          bloom: +d.bloom,\n          shannon: +d.shannon,\n          consval: +d.consval,\n          grass_spec_frac: +d.grass_spec_frac,\n          grass_weight_frac: +d.grass_weight_frac\n        }\n      });\n      setCostRange({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomRange({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonRange({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsRange({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistRange({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setCostFilter({\n        min: Math.floor(d3.min(data, d=>+d.cost)), \n        max: Math.ceil(d3.max(data, d=>+d.cost))\n      });\n      setBloomFilter({\n        min: Math.floor(d3.min(data, d=>+d.bloom)), \n        max: Math.ceil(d3.max(data, d=>+d.bloom))\n      });\n      setShannonFilter({\n        min: Math.floor(d3.min(data, d=>+d.shannon)),\n        max: Math.ceil(d3.max(data, d=>+d.shannon))\n      });\n      setConsFilter({\n        min: Math.floor(d3.min(data, d=>+d.consval)),\n        max: Math.ceil(d3.max(data, d=>+d.consval))\n      });\n      setPhyloDistFilter({\n        min: Math.floor(d3.min(data, d=>+d.phylo_dist)),\n        max: Math.ceil(d3.max(data, d=>+d.phylo_dist))\n      });\n      setOptimData(data);\n      // setOptimData(data.slice(1,10));\n\n    };\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    if (canvas === null || optimData === null){ return }\n    updatePlot();\n  }, [canvas, optimData, costFilter, bloomFilter, shannonFilter, consFilter, phyloDistFilter, xAxisObjective, yAxisObjective])\n\n  function updatePlot() {\n    var selectedPointID = selectedMix; // This is awkward - need to track \n\n    /** Axes */\n    const xmin = Math.floor(0.98 * d3.min(optimData, d=>+d[xAxisObjective]));\n    const xmax = d3.max(optimData, d=>+d[xAxisObjective]);\n    const xScale = d3.scaleLinear()\n      .domain([xmin, xmax])\n      .range([margin.left, figW - margin.right]);\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .ticks(5);\n    canvas.select(\"g#x-axis\")\n      .call(xAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#x-axis-label\")\n      .text(xAxisObjective);\n\n    const ymin = Math.floor(0.98 * d3.min(optimData, d=>+d[yAxisObjective]));\n    const ymax = d3.max(optimData, d=>+d[yAxisObjective]);\n    const yScale = d3.scaleLinear()\n      .domain([ymin, ymax])\n      .range([figH-margin.bottom, margin.top]);\n    const yAxis = d3.axisLeft()\n      .scale(yScale)\n      .ticks(5);\n    canvas.select(\"g#y-axis\")\n      .call(yAxis)\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"font-size\", \"12pt\");\n    canvas.select(\"text#y-axis-label\")\n      .text(yAxisObjective);\n    \n    function pointColor(pt) {\n      if (pt.indiv === selectedPointID) { return \"red\" }\n      else if (\n        pt.bloom >= bloomFilter.min && pt.bloom <= bloomFilter.max &&\n        pt.cost >= costFilter.min && pt.cost <= costFilter.max &&\n        pt.shannon >= shannonFilter.min && pt.shannon <= shannonFilter.max &&\n        pt.consval >= consFilter.min && pt.consval <= consFilter.max &&\n        pt.phylo_dist >= phyloDistFilter.min && pt.phylo_dist <= phyloDistFilter.max\n      ) {\n        return \"blue\"\n      }\n      else {\n        return \"lightgray\"\n      }\n    }\n  \n    function pointOpacity(pt) {\n      return (pt.indiv === selectedPointID) ? 0.85 : 0.5;\n    }\n    \n    const t = d3.transition()\n      .duration(500);\n    canvas.selectAll(\"circle\")\n      .data(optimData)\n      .join(\n        enter => enter.append(\"circle\")\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"r\", 3)\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d))\n          .on('mouseover', function (d, i) {\n            // d is the data object, i is the array index, and this is the svg element\n            d3.select(this)\n              .attr('opacity', 0.85)\n              .attr(\"r\", 5)\n          })\n          .on('mouseout', function (d, i) {\n            d3.select(this)\n              .attr('opacity', d => pointOpacity(d))\n              .attr('r', 3)\n          })\n          .on('click', function(d, i) {\n            setSelectedMix(d.indiv);\n            selectedPointID = d.indiv;\n            d3.select(\"#selected-point\")\n              .attr(\"id\", null)\n              .attr(\"fill\", g => pointColor(g))\n              .attr(\"opacity\", g => pointOpacity(g));\n            d3.select(this)\n              .attr(\"fill\", \"red\")\n              .attr(\"opacity\", 0.9)\n              .attr(\"id\", \"selected-point\");\n          }),\n        update => update.transition(t)\n          .attr(\"cx\", d => xScale(+d[xAxisObjective]))\n          .attr(\"cy\", d => yScale(+d[yAxisObjective]))\n          .attr(\"fill\", d => pointColor(d))\n          .attr(\"opacity\", d => pointOpacity(d)),\n        exit => exit.remove()\n      );\n\n  }\n\n\n  return (\n    <div id=\"optim-browser\">\n    <div id=\"ob-slider-pane\">\n      <h2>Filters</h2>\n      <Slider name=\"Cost\" range={costRange} update={setCostFilter} />\n      <Slider name=\"Bloom\" range={bloomRange} update={setBloomFilter} />\n      <Slider name=\"Shannon Diversity\" range={shannonRange} update={setShannonFilter} />\n      <Slider name=\"Conservatism\" range={consRange} update={setConsFilter} />\n      <Slider name=\"Phylo Dist\" range={phyloDistRange} update={setPhyloDistFilter} />\n\n    </div>\n      \n    <div id=\"ob-plot-pane\">\n      <h2>Scatter Plot</h2>\n      {/* \n        const [xAxisObjective, setXAxisObjective] = useState(\"cost\");\n        const [yAxisObjective, setYAxisObjective] = useState(\"bloom\");\n      */}\n      <AxisControl\n        xAxis={xAxisObjective}\n        setXAxis={setXAxisObjective}\n        yAxis={yAxisObjective}\n        setYAxis={setYAxisObjective}\n      />\n      <div id=\"plot-pane\"></div>\n    </div>\n\n      <ReportPane mixid={selectedMix}/>\n    </div>\n  )\n}\n\n\nconst AxisControl = ({xAxis, setXAxis, yAxis, setYAxis}) => {\n\n  return (\n    <div id=\"axis-control\">\n      <AxisSelect value={xAxis} updater={setXAxis} />\n      <AxisSelect value={yAxis} updater={setYAxis} />\n    </div>\n  )\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst AxisSelect = ({label, value, updater}) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel >{label}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={value}\n        onChange={e=>updater(e.target.value)}>\n        \n        <MenuItem value={\"bloom\"}>Bloom</MenuItem>\n        <MenuItem value={\"cost\"}>Cost</MenuItem>\n        <MenuItem value={\"shannon\"}>Shannon diversity</MenuItem>\n        <MenuItem value={\"consval\"}>Conservatism</MenuItem>\n        <MenuItem value={\"phylo_dist\"}>Phylogenetic distance</MenuItem>\n      \n      </Select>\n    </FormControl>\n  )\n}\n\n\nconst Slider = ({name, range, update}) => {\n  const[filterMin, setFilterMin] = useState(0);\n  const[filterMax, setFilterMax] = useState(1);\n\n  useEffect(() => {\n    setFilterMin(range.min);\n    setFilterMax(range.max);\n  }, [range]);\n\n  function handleMinChange(e) {\n    setFilterMin(+e.currentTarget.value);\n    update({min: +e.currentTarget.value, max: filterMax});\n  }\n  function handleMaxChange(e) {\n    setFilterMax(+e.currentTarget.value);\n    update({min: filterMin, max: +e.currentTarget.value});\n  }\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider-header\">\n        <div className=\"slider-objective-name\">{name}</div>\n        <div className=\"slider-objective-range\">({range.min}-{range.max})</div>\n      </div>\n      <div className=\"slider-input-row\">\n        Min: \n        <input type=\"text\" className=\"slider-input\" value={filterMin} onChange={handleMinChange}></input>\n        Max: \n        <input type=\"text\" className=\"slider-input\" value={filterMax} onChange={handleMaxChange}></input>\n      </div>\n    </div>\n  )\n}\n\n\nconst ReportPane = ({ mixid }) => {\n  const [open, setOpen] = useState(false);\n\n\n  return(\n    <div id=\"ob-report-pane\">\n      <div id='ob-report-table'>\n        <h2>Report Pane</h2>\n          Selected mix: {mixid}\n      </div>\n      {/* <div id='ob-report-save-button'>\n        {mixid !== null && authenticationService.currentUserValue &&\n          <button type=\"button\" onClick={handleSaveButtonClick}>Save to project</button> }\n      </div>\n      <CopyMixDialog selectedMix={mixid} onClose={handleSaveDialogClose} open={open} /> */}\n    </div>\n  )\n}\n\n\nexport { OptimBrowser }","import React, { Component } from 'react';\nimport './App.css';\nimport { OptimBrowser } from '../OptimBrowser';\n\nconst App = () => {\n    return (\n        <div id=\"app-container\">\n            <OptimBrowser />\n        </div>\n      )\n  \n}\n\n\nexport {App}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n\n// import { faReply, faCloud, faSun, faCloudSun, faEdit, faEye, faEllipsisH, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport './index.css';\nimport { App } from './App';\n\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n"],"sourceRoot":""}